[BEGIN PROCESS]
Input: string, second_string: two strings where characters from the first string that are present in the second string need to be removed.
Output: A new string with characters removed.

1: Initialize an empty string called `clean_string` to store the result.
2: Loop through each character `char` in `string`.
3:     If `char` is not in `second_string`:
4:         Append `char` to `clean_string`.
5: Return `clean_string`.
[END PROCESS]

[BEGIN CODE]
def remove_dirty_chars(string, second_string):
    clean_string = ""
    for char in string:
        if char not in second_string:
            clean_string += char
    return clean_string
[END CODE]

Explanation:
The function `remove_dirty_chars` takes two strings as input: `string` and `second_string`. It iterates through each character in `string` and checks if the character is not present in `second_string`. If the character is not found in `second_string`, it is appended to `clean_string`. After the loop completes, `clean_string` contains only the characters from `string` that were not in `second_string`. The function then returns `clean_string`. This approach ensures that all characters from `string` that are also in `second_string` are removed, and the result is a new string with the unwanted characters filtered out.