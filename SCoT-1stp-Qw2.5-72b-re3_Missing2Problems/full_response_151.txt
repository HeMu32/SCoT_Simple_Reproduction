[BEGIN PROCESS]
Input: x, y: two integers
Output: boolean: True if x and y are co-prime, False otherwise

1: Define a function to find the greatest common divisor (GCD) of two numbers.
2: Use the Euclidean algorithm to compute the GCD:
   - While y is not 0:
     - Set x to y
     - Set y to the remainder of x divided by y
3: If the GCD is 1, x and y are co-prime, return True.
4: Otherwise, return False.
[END PROCESS]

[BEGIN CODE]
def gcd(x, y):
    while y:
        x, y = y, x % y
    return x

def is_coprime(x, y):
    return gcd(x, y) == 1
[END CODE]

Explanation:
- The function `gcd` is defined to compute the greatest common divisor of two numbers using the Euclidean algorithm. This algorithm repeatedly replaces the larger number by the remainder of the division of the larger number by the smaller one until one of the numbers becomes zero. The non-zero number at this point is the GCD of the original two numbers.
- The function `is_coprime` uses the `gcd` function to determine if the GCD of `x` and `y` is 1. If it is, the numbers are co-prime, and the function returns `True`. Otherwise, it returns `False`.
- Two numbers are co-prime if their only positive integer factor in common is 1, which is exactly what the GCD of 1 indicates.