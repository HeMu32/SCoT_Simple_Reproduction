[BEGIN PROCESS]
Input: str1: a string
Output: result: a string with even-indexed characters removed

1: Initialize an empty string called result
2: Loop through the string str1 using an index i starting from 0 to the length of str1 - 1
3:     If the index i is odd (i.e., i % 2 == 1):
4:         Add the character at index i to result
5: Return result
[END PROCESS]

[BEGIN CODE]
def remove_even(str1):
    result = ""
    for i in range(len(str1)):
        if i % 2 == 1:
            result += str1[i]
    return result
[END CODE]

Explanation:
- The function `remove_even` takes a single string `str1` as input.
- It initializes an empty string `result` to store the characters at odd indices.
- It iterates over the string using a for loop, where `i` is the index of the current character.
- Inside the loop, it checks if the index `i` is odd using the condition `i % 2 == 1`. If true, it appends the character at index `i` to the `result` string.
- After the loop completes, the function returns the `result` string, which contains only the characters from the original string that were at odd indices.
- Note that in Python, string indices start at 0, so the first character is at an even index (0), and the second character is at an odd index (1), and so on.