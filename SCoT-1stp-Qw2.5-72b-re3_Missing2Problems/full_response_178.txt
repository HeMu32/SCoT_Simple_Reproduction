[BEGIN PROCESS]
Input: patterns: a list of strings to search for, text: the string to search within
Output: matches: a list of tuples, each containing the pattern and its starting index in the text

1: Initialize an empty list to store the matches
2: For each pattern in the patterns list:
3:     Use the find method to locate the starting index of the pattern in the text
4:     If the pattern is found (index is not -1):
5:         Append a tuple containing the pattern and its starting index to the matches list
6: Return the matches list
[END PROCESS]

[BEGIN CODE]
def string_literals(patterns, text):
    matches = []
    for pattern in patterns:
        index = text.find(pattern)
        if index != -1:
            matches.append((pattern, index))
    return matches
[END CODE]

### Explanation:
The function `string_literals` is designed to search for multiple literal strings (patterns) within a given text. It returns a list of tuples, where each tuple contains a pattern and the starting index of where that pattern is found in the text. If a pattern is not found, it is not included in the output list. The `find` method of strings is used to locate the starting index of each pattern. If the pattern is not found, `find` returns -1, which is used to skip adding the pattern to the matches list. This approach ensures that only patterns that are actually found in the text are included in the output.