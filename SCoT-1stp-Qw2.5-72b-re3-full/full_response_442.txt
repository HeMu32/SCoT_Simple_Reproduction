[BEGIN PROCESS]
Input: nums: a list of integers
Output: The ratio of positive numbers in the list

1: Initialize a variable `positive_count` to 0 to keep track of the number of positive numbers.
2: Initialize a variable `total_count` to the length of the list `nums` to represent the total number of elements.
3: Iterate over each element in the list `nums`:
   3.1: If the current element is greater than 0, increment `positive_count` by 1.
4: Calculate the ratio of positive numbers by dividing `positive_count` by `total_count`.
5: Return the ratio.
[END PROCESS]

[BEGIN CODE]
def positive_count(nums):
    positive_count = 0
    total_count = len(nums)
    
    for num in nums:
        if num > 0:
            positive_count += 1
    
    ratio = positive_count / total_count
    return ratio
[END CODE]

### Explanation:
The function `positive_count` calculates the ratio of positive numbers in a given list of integers. Here's a breakdown of the steps:

1. **Initialization**:
   - `positive_count` is initialized to 0 to count the number of positive numbers.
   - `total_count` is set to the length of the input list `nums`.

2. **Iteration**:
   - The function iterates over each element in the list `nums`.
   - For each element, it checks if the element is greater than 0. If it is, `positive_count` is incremented by 1.

3. **Calculation**:
   - After the loop, the ratio of positive numbers is calculated by dividing `positive_count` by `total_count`.

4. **Return**:
   - The function returns the calculated ratio.

This approach ensures that the function correctly computes the ratio of positive numbers in the list.