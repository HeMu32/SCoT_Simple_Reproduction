[BEGIN PROCESS]
Input: a: the first term of the arithmetic progression, n: the term number to find, d: the common difference between the terms
Output: the value of the n-th term of the arithmetic progression

1: Calculate the n-th term using the formula for the n-th term of an arithmetic progression: a_n = a + (n - 1) * d
2: Return the calculated value
[END PROCESS]

[BEGIN CODE]
def tn_ap(a, n, d):
    # Calculate the n-th term of the arithmetic progression
    a_n = a + (n - 1) * d
    # Return the calculated value
    return a_n
[END CODE]

### Explanation:
The function `tn_ap` is designed to calculate the n-th term of an arithmetic progression given the first term `a`, the term number `n`, and the common difference `d`. The formula used is \( a_n = a + (n - 1) \cdot d \), where:
- \( a \) is the first term.
- \( n \) is the term number.
- \( d \) is the common difference between consecutive terms.

The function simply applies this formula and returns the result. This approach ensures that the function is straightforward and efficient.