Certainly! Let's break down the task and solve it step by step.

### Task Understanding
The function `rear_extract` is required to extract the last element from each tuple in a list of tuples.

### Solving Process
[BEGIN PROCESS]
Input: test_list: a list of tuples
Output: result: a list containing the last element of each tuple in test_list

1: Initialize an empty list called `result`
2: Loop through each tuple in `test_list`
3:     Extract the last element of the current tuple
4:     Append the extracted element to `result`
5: Return `result`
[END PROCESS]

### Code Implementation
[BEGIN CODE]
def rear_extract(test_list):
    result = []
    for tup in test_list:
        result.append(tup[-1])
    return result
[END CODE]

### Explanation
1. **Initialization**: We start by initializing an empty list `result` which will store the last elements of each tuple.
2. **Looping through the list**: We use a for loop to iterate over each tuple in `test_list`.
3. **Extracting the last element**: For each tuple, we use the index `-1` to access the last element.
4. **Appending to the result list**: We append the extracted element to the `result` list.
5. **Returning the result**: Finally, we return the `result` list which contains all the last elements from the tuples in `test_list`.

This approach ensures that we correctly extract the last element from each tuple and return a list of these elements.