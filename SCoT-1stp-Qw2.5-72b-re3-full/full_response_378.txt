[BEGIN PROCESS]
Input: test_list: a list of elements
Output: res: a list with the last element moved to the first position

1: Check if the list is empty or contains only one element
2:   If true, return the list as it is because no change is needed
3: If the list has more than one element:
4:   Store the last element of the list in a variable
5:   Remove the last element from the list
6:   Insert the stored last element at the beginning of the list
7: Return the modified list
[END PROCESS]

[BEGIN CODE]
def move_first(test_list):
    if len(test_list) <= 1:
        return test_list
    else:
        last_element = test_list[-1]
        test_list.pop()
        test_list.insert(0, last_element)
        return test_list
[END CODE]

Explanation:
The function `move_first` takes a list `test_list` as input and checks if the list is either empty or contains only one element. If so, it returns the list unchanged because there's no need to move the last element to the first position. If the list contains more than one element, the function performs the following steps:
1. It stores the last element of the list in a variable `last_element`.
2. It removes the last element from the list using the `pop` method.
3. It inserts the stored last element at the beginning of the list using the `insert` method.
4. Finally, it returns the modified list.

This approach ensures that the function works correctly for lists of any length, including edge cases where the list is empty or contains only one element.