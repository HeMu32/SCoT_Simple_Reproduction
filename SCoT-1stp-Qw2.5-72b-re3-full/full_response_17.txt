[BEGIN PROCESS]
Input: a: a float or integer representing the side length of the square
Output: perimeter: a float or integer representing the perimeter of the square

1: Check if the input 'a' is a positive number
2: If 'a' is not positive, return an error message or an invalid value (e.g., -1)
3: If 'a' is positive, calculate the perimeter by multiplying 'a' by 4
4: Return the calculated perimeter
[END PROCESS]

[BEGIN CODE]
def square_perimeter(a):
    if a <= 0:
        return -1  # Invalid input, side length must be positive
    perimeter = 4 * a
    return perimeter
[END CODE]

Explanation:
The function `square_perimeter(a)` is designed to calculate the perimeter of a square given the length of one of its sides. The perimeter of a square is calculated by multiplying the length of one side by 4, since a square has four equal sides. The function first checks if the input `a` is a positive number. If `a` is not positive (i.e., it is zero or negative), the function returns -1 to indicate an invalid input. If `a` is positive, the function calculates the perimeter and returns it. This ensures that the function handles invalid inputs gracefully and provides a meaningful result for valid inputs.