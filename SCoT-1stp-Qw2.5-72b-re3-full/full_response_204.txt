Certainly! Let's break down the task and then implement the solution.

### Task Understanding
The task is to write a Python function named `count` that takes two parameters:
- `s`: a string in which we need to count the occurrences of a specific character.
- `c`: the character whose occurrences we need to count in the string `s`.

### Solving Process
[BEGIN PROCESS]
1. **Input**: 
   - `s`: a string.
   - `c`: a character.

2. **Output**: 
   - An integer representing the number of times the character `c` appears in the string `s`.

3. **Steps**:
   - Initialize a variable `res` to 0. This variable will store the count of occurrences.
   - Iterate over each character in the string `s` using a loop.
   - For each character in `s`, check if it is equal to `c`.
   - If the character is equal to `c`, increment `res` by 1.
   - After the loop, return the value of `res`.

[END PROCESS]

### Code Implementation
[BEGIN CODE]
def count(s, c):
    res = 0
    for i in range(len(s)):
        if s[i] == c:
            res += 1
    return res
[END CODE]

### Explanation
- **Initialization**: We start by initializing `res` to 0. This variable will keep track of the number of times the character `c` appears in the string `s`.
- **Loop**: We use a `for` loop to iterate over each character in the string `s`. The loop runs from `0` to `len(s) - 1`.
- **Condition**: Inside the loop, we check if the current character `s[i]` is equal to the character `c`.
- **Increment**: If the condition is true, we increment `res` by 1.
- **Return**: After the loop completes, we return the value of `res`, which now contains the count of occurrences of `c` in `s`.

This function will correctly count the number of times a given character appears in a string.