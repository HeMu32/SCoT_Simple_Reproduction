[BEGIN PROCESS]
Input: text: a string to be checked
Output: match: a boolean indicating whether the text matches the pattern (an 'a' followed by one or more 'b's)

1: Define the pattern to match an 'a' followed by one or more 'b's.
2: Use a regular expression to search for the pattern in the text.
3: If the pattern is found, return True.
4: If the pattern is not found, return False.
[END PROCESS]

[BEGIN CODE]
import re

def text_match_one(text):
    # Define the pattern
    pattern = 'ab+'
    
    # Search for the pattern in the text
    match = re.search(pattern, text)
    
    # Return True if the pattern is found, otherwise False
    return bool(match)
[END CODE]

### Explanation:
The function `text_match_one` is designed to determine if the input string `text` contains a pattern where an 'a' is followed by one or more 'b's. This is achieved using regular expressions (regex), which are powerful tools for string pattern matching.

1. **Pattern Definition**: The pattern `ab+` is defined using regex syntax. Here, `a` matches the character 'a', and `b+` matches one or more occurrences of the character 'b'. The `+` quantifier specifies that the preceding character (in this case, 'b') must appear one or more times.

2. **Pattern Search**: The `re.search` function is used to search for the pattern within the input string `text`. If the pattern is found, `re.search` returns a match object; otherwise, it returns `None`.

3. **Result**: The function returns `True` if a match is found (i.e., the match object is not `None`), and `False` otherwise.

This approach ensures that the function accurately identifies strings that contain the specified pattern.