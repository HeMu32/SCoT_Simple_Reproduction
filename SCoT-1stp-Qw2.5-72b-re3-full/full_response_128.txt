[BEGIN PROCESS]
Input: n: an integer representing the minimum length of words to be included, str: a string containing a list of words separated by spaces
Output: A list of words from the input string that are longer than n characters

1: Split the input string `str` into a list of words
2: Initialize an empty list `long_words_list` to store words longer than `n` characters
3: For each word `word` in the list of words:
   4: If the length of `word` is greater than `n`:
      5: Add `word` to `long_words_list`
6: Return `long_words_list`
[END PROCESS]

[BEGIN CODE]
def long_words(n, str):
    # Split the input string into a list of words
    words = str.split()
    
    # Initialize an empty list to store words longer than n characters
    long_words_list = []
    
    # Iterate over each word in the list
    for word in words:
        # Check if the length of the word is greater than n
        if len(word) > n:
            # Add the word to the list of long words
            long_words_list.append(word)
    
    # Return the list of long words
    return long_words_list
[END CODE]

Explanation:
The function `long_words` takes two parameters: `n` and `str`. The parameter `n` is an integer that specifies the minimum length a word must have to be included in the output. The parameter `str` is a string containing a list of words separated by spaces.

The function first splits the input string `str` into a list of words using the `split()` method. It then initializes an empty list `long_words_list` to store the words that meet the length requirement.

The function iterates over each word in the list of words. For each word, it checks if the length of the word is greater than `n`. If the condition is met, the word is added to `long_words_list`.

Finally, the function returns `long_words_list`, which contains all the words from the input string that are longer than `n` characters.