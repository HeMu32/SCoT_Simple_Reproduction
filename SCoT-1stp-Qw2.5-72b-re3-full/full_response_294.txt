[BEGIN PROCESS]
Input: listval: a list that can contain various data types (integers, floats, strings, etc.)
Output: max_val: the maximum value found in the list, considering only numeric types (integers and floats)

1: Initialize a variable max_value to None
2: Loop through each element in listval:
3:     If the element is an integer or a float:
4:         If max_value is None or the element is greater than max_value:
5:             Set max_value to the element
6: If max_value is still None after the loop, raise an error indicating that no numeric values were found
7: Return max_value
[END PROCESS]

[BEGIN CODE]
def max_val(listval):
    max_value = None
    for element in listval:
        if isinstance(element, (int, float)):
            if max_value is None or element > max_value:
                max_value = element
    if max_value is None:
        raise ValueError("No numeric values found in the list.")
    return max_value
[END CODE]

### Explanation:
The function `max_val` is designed to find the maximum numeric value in a given list that may contain elements of various data types. The process involves iterating through each element in the list, checking if it is a numeric type (either an integer or a float), and updating the `max_value` variable if the current element is greater than the current `max_value`. If no numeric values are found in the list, the function raises a `ValueError` to indicate this condition. This ensures that the function handles cases where the list might not contain any numeric values, providing a clear and informative error message.