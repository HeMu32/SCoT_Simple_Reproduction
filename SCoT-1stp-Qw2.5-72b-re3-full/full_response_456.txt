[BEGIN PROCESS]
Input: stringlist: a list of string values
Output: a new list with each string reversed

1: Initialize an empty list to store the reversed strings
2: Loop through each string in the input list
3:     For each string, reverse the string
4:     Append the reversed string to the new list
5: Return the new list containing the reversed strings
[END PROCESS]

[BEGIN CODE]
def reverse_string_list(stringlist):
    # Initialize an empty list to store the reversed strings
    reversed_list = []
    
    # Loop through each string in the input list
    for string in stringlist:
        # Reverse the string using slicing
        reversed_string = string[::-1]
        # Append the reversed string to the new list
        reversed_list.append(reversed_string)
    
    # Return the new list containing the reversed strings
    return reversed_list
[END CODE]

### Explanation:
The function `reverse_string_list` takes a list of strings as input and returns a new list where each string is reversed. The process involves:
- Initializing an empty list `reversed_list` to store the reversed strings.
- Iterating over each string in the input list `stringlist`.
- Reversing each string using Python's slicing technique `string[::-1]`, which creates a new string that is the reverse of the original.
- Appending the reversed string to the `reversed_list`.
- Finally, returning the `reversed_list` containing all the reversed strings.

This approach ensures that the function is simple, efficient, and easy to understand.