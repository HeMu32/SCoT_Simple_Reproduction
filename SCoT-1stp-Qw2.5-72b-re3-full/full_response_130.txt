[BEGIN PROCESS]
Input: nums: a list of items (can be numbers, strings, etc.)
Output: item: the item with the maximum frequency in the list
1: Initialize an empty dictionary to store the frequency of each item
2: Loop through each item in the list nums
3:     If the item is not in the dictionary, add it with a count of 1
4:     If the item is already in the dictionary, increment its count by 1
5: Initialize a variable max_count to 0 and max_item to None
6: Loop through each key-value pair (item, count) in the dictionary
7:     If the count is greater than max_count, update max_count to count and max_item to item
8: Return max_item
[END PROCESS]

[BEGIN CODE]
def max_occurrences(nums):
    # Step 1: Initialize an empty dictionary to store the frequency of each item
    frequency = {}
    
    # Step 2: Loop through each item in the list nums
    for item in nums:
        # Step 3: If the item is not in the dictionary, add it with a count of 1
        if item not in frequency:
            frequency[item] = 1
        # Step 4: If the item is already in the dictionary, increment its count by 1
        else:
            frequency[item] += 1
    
    # Step 5: Initialize a variable max_count to 0 and max_item to None
    max_count = 0
    max_item = None
    
    # Step 6: Loop through each key-value pair (item, count) in the dictionary
    for item, count in frequency.items():
        # Step 7: If the count is greater than max_count, update max_count to count and max_item to item
        if count > max_count:
            max_count = count
            max_item = item
    
    # Step 8: Return max_item
    return max_item
[END CODE]

### Explanation:
The function `max_occurrences` is designed to find the item that appears most frequently in a given list `nums`. The process involves two main steps:

1. **Frequency Calculation**: We use a dictionary to keep track of how many times each item appears in the list. We iterate through the list, and for each item, we either add it to the dictionary with a count of 1 if it's not already present, or we increment its count if it is.

2. **Finding the Maximum**: After calculating the frequencies, we iterate through the dictionary to find the item with the highest count. We keep track of the maximum count and the corresponding item, updating these values as we find items with higher counts.

Finally, we return the item with the highest frequency. This approach ensures that we efficiently find the most frequent item in the list.