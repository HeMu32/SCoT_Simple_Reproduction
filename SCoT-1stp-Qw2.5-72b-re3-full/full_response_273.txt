[BEGIN PROCESS]
Input: test_tup1, test_tup2: two tuples of integers of the same length
Output: result_tup: a tuple where each element is the result of subtracting the element of test_tup2 from the corresponding element of test_tup1 at the same index
1: Initialize an empty list to store the results of the subtraction
2: Iterate over the indices of the tuples (assuming both tuples are of the same length)
3:     For each index, subtract the element in test_tup2 from the element in test_tup1
4:     Append the result to the results list
5: Convert the results list to a tuple
6: Return the result tuple
[END PROCESS]

[BEGIN CODE]
def substract_elements(test_tup1, test_tup2):
    # Initialize an empty list to store the results
    result_list = []
    
    # Iterate over the indices of the tuples
    for i in range(len(test_tup1)):
        # Subtract the element in test_tup2 from the element in test_tup1
        result = test_tup1[i] - test_tup2[i]
        # Append the result to the results list
        result_list.append(result)
    
    # Convert the results list to a tuple
    result_tup = tuple(result_list)
    
    # Return the result tuple
    return result_tup
[END CODE]

### Explanation:
The function `substract_elements` takes two tuples, `test_tup1` and `test_tup2`, as input. It assumes that both tuples are of the same length. The function iterates over the indices of the tuples, subtracts the element in `test_tup2` from the corresponding element in `test_tup1`, and appends the result to a list. After processing all elements, the list is converted to a tuple, which is then returned as the result. This approach ensures that the function performs the subtraction element-wise and returns a tuple with the results.