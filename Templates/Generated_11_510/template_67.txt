Input: n: an integer representing the number of elements in the set
Output: The nth Bell number, which is the number of ways to partition a set of n elements

1: Initialize a 2D list `bell` of size (n+1) x (n+1) with all elements set to 0
2: Set `bell[0][0]` to 1 (base case for Bell numbers)
3: for i from 1 to n (inclusive):
4:     Set `bell[i][0]` to `bell[i-1][i-1]` (the first element of each row is the last element of the previous row)
5:     for j from 1 to i (inclusive):
6:         Set `bell[i][j]` to `bell[i-1][j-1] + bell[i][j-1]` (each element is the sum of the element above it and the element to the left of it in the previous row)
7: return `bell[n][0]` (the nth Bell number is the first element of the nth row)